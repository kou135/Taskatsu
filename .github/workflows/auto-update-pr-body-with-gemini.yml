name: Auto update PR body with Gemini summary

on:
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: write

jobs:
  update-pr-body:
    if: |
      github.event.comment.user.login == 'github-actions[bot]' &&
      contains(github.event.comment.body, 'Walkthrough')
    runs-on: ubuntu-latest
    steps:
      - name: Extract PR number
        id: pr
        run: echo "pr_number=$(jq .issue.number \"$GITHUB_EVENT_PATH\")" >> $GITHUB_OUTPUT

      - name: Get current PR body
        id: get_pr
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ steps.pr.outputs.pr_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract summary from comment
        id: summary
        run: |
          echo "${{ github.event.comment.body }}" > summary.txt

      - name: Summarize with Gemini
        id: gemini
        run: |
          SUMMARY=$(cat summary.txt)
          RESPONSE=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -d "{\"contents\": [{\"parts\": [{\"text\": \"以下はGitHubのプルリクエストに対するAIレビューコメントです。この内容をもとに、下記のPRテンプレートの「変更内容」欄にふさわしい日本語の要約文、そして想定される「実装の背景」欄を作成してください。\n\n【AIレビューコメント】\n$SUMMARY\n\n# 出力条件\n- 「### 変更内容」欄にそのまま貼れるような、簡潔で分かりやすい日本語でまとめてください。\n- テンプレートの他の欄は絶対に出力しないでください。\n- 余計な挨拶や説明文は不要です。「変更内容」だけを出力してください。\"}]}]}" \
            "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${{ secrets.GEMINI_API_KEY }}")
          echo "gemini_summary<<EOF" >> $GITHUB_OUTPUT
          echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update PR body
        uses: actions/github-script@v7
        with:
          script: |
            const prBody = `${{ steps.get_pr.outputs.data.body }}`;
            const summary = `${{ steps.gemini.outputs.gemini_summary }}`;
            // 「変更内容」欄を要約で置換
            const newBody = prBody.replace(/(### 変更内容\n)([\s\S]*?)(\n---)/, `$1${summary}$3`);
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.pr.outputs.pr_number }},
              body: newBody
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 